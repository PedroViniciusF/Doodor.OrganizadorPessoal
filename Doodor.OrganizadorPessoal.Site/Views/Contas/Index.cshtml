@model IEnumerable<Doodor.OrganizadorPessoal.Application.ViewModels.ContaViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Gestão de Contas</h2>
        <ol class="breadcrumb">
            <li>
                <a href="#">Home</a>
            </li>
            <li>
                <a>Financeiro</a>
            </li>
            <li class="active">
                <strong>Contas</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="ibox float-e-margins">    
                <div class="ibox-title">
                    <h5>Lista de contas</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                    <br/>
                    <div class="text-right">
                        <a asp-action="Create" class="btn btn-success btn-fw">Nova Conta</a>
                    </div>
                </div>


                <div class="ibox-content">
                    <div class="row">
                        <div class="table-responsive">
                            </br>
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.Nome)</th>
                                        <th>@Html.DisplayNameFor(model => model.ValorTotal)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ValorTotal)
                            </td>
                            <td class="text-right">
                                <div class="btn-group">
                                    <a asp-action="Details" asp-route-id="@item.Id">
                                        <button type="button" class="btn btn-o btn-info"><i class="icon fa fa-align-justify"></i></button>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.Id">
                                        <button type="button" class="btn btn-o btn-warning"><i class="icon fa fa-edit"></i></button>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id">
                                        <button type="button" class="btn btn-o btn-danger"><i class="icon fa fa-trash-o"></i></button>
                                    </a>
                                </div>
                            </td>
                        </tr>
    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    </div>
                </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @if (ViewBag.RetornoPost != null)
    {
        var notificacao = ViewBag.RetornoPost.ToString().Split(",");

        <script>

        toastr.options = {
            "closeButton": false,
            "debug": true,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": true,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr["@notificacao[0]"]("@notificacao[1]");
        </script>
    }
}